name: CD

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

jobs:
  build-api:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install worker-build
      run: cargo install -q worker-build --force
    
    - name: Build API Worker
      run: cd cloth-api && worker-build --release
      
    - name: Upload API build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-build
        path: cloth-api/build/
        retention-days: 1

  build-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.16.0'
    
    - name: Install monorepo dependencies
      run: npm ci
    
    - name: Install frontend dependencies  
      run: |
        cd cloth-frontend
        npm ci
        npm install --force @rollup/rollup-linux-x64-gnu
    
    - name: Build frontend assets
      run: |
        cd cloth-frontend
        npm run build
        mkdir -p public
        cp -r build/client/* public/
      
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: cloth-frontend/build/
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: [build-api, build-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download API build artifacts
      uses: actions/download-artifact@v4
      with:
        name: api-build
        path: cloth-api/build/
    
    - name: Download frontend build artifacts  
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: cloth-frontend/build/
      
    - name: Install wrangler
      run: npm install -g wrangler@latest
      
    - name: Deploy API and Frontend Workers (parallel)
      run: |
        cd cloth-api && wrangler deploy --env production &
        cd cloth-frontend && wrangler deploy --env production &
        wait
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Smoke test deployments
      run: |
        echo "Waiting for deployments to be available..."
        sleep 30
        ./bin/test-smoke
      continue-on-error: true # Don't fail deployment if smoke tests fail