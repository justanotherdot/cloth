name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  rust-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Unit tests
      run: cargo test --workspace

  api-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install worker-build
      run: cargo install -q worker-build --force
    
    - name: Build API Worker WASM
      run: cd cloth-api && worker-build --release
      
    - name: Upload API build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-build
        path: cloth-api/build/
        retention-days: 1

  frontend-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.16.0'
    
    - name: Install monorepo dependencies
      run: npm ci
    
    - name: Install frontend dependencies
      run: |
        cd cloth-frontend
        npm ci
        npm install --force @rollup/rollup-linux-x64-gnu
    
    - name: Build frontend
      run: cd cloth-frontend && npm run build
      
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: cloth-frontend/build/
        retention-days: 1

  validation-tests:
    runs-on: ubuntu-latest
    needs: [api-build, frontend-build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download API build artifacts
      uses: actions/download-artifact@v4
      with:
        name: api-build
        path: cloth-api/build/
    
    - name: Download frontend build artifacts  
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: cloth-frontend/build/
        
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.16.0'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Copy frontend assets to public for validation
      run: |
        cd cloth-frontend
        mkdir -p public
        cp -r build/client/* public/
    
    - name: Build validation tests
      run: ./bin/test-build
    
    - name: Regression tests
      run: ./bin/test-regressions

  # TODO: E2E tests disabled until service startup issues resolved
  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   needs: [api-build, frontend-build]
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Download API build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: api-build
  #       path: cloth-api/build/
  #   
  #   - name: Download frontend build artifacts  
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: frontend-build
  #       path: cloth-frontend/build/
  #       
  #   - name: Install Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.16.0'
  #   
  #   - name: Cache E2E dependencies
  #     uses: actions/cache@v4
  #     with:
  #       path: tests/e2e/node_modules
  #       key: ${{ runner.os }}-e2e-${{ hashFiles('tests/e2e/package*.json') }}
  #
  #   - name: Install E2E dependencies
  #     run: cd tests/e2e && npm install
  #   
  #   - name: Install Playwright browsers
  #     run: cd tests/e2e && npx playwright install chromium
  #   
  #   - name: Install wrangler
  #     run: npm install -g wrangler
  #   
  #   - name: Run E2E tests
  #     run: cd tests/e2e && npm test
  #     env:
  #       BASE_URL: http://localhost:3000
  #       API_URL: http://localhost:8787
  #       AUTH_USERNAME: admin
  #       AUTH_PASSWORD: dev123
  #
  #   - name: Upload E2E artifacts
  #     uses: actions/upload-artifact@v4
  #     if: failure()
  #     with:
  #       name: playwright-report
  #       path: tests/e2e/playwright-report/

  # Deployment handled by Cloudflare's native CD:
  # - API Worker: Use GitHub integration with wrangler.toml
  # - Frontend Worker: Use GitHub integration with wrangler.toml
  # 
  # To enable:
  # 1. Connect GitHub repo to both Workers in CF dashboard
  # 2. Set root directory paths for each Worker:
  #    - API: cloth-api/
  #    - Frontend: cloth-frontend/
  # 3. Configure environment variables in CF dashboard