name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          tests/e2e/package-lock.json
    
    - name: Unit tests
      run: cargo test --workspace
    
    - name: Install worker-build
      run: cargo install -q worker-build --force
    
    - name: Build WASM
      run: cd cloth-api && worker-build --release
    
    - name: Install frontend dependencies
      run: cd frontend && npm ci
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Build validation tests
      run: ./bin/test-build
    
    - name: Regression tests
      run: ./bin/test-regressions
    
    - name: Install E2E dependencies
      run: cd tests/e2e && npm ci
    
    - name: Install Playwright browsers
      run: cd tests/e2e && npx playwright install chromium
    
    - name: Start services for E2E tests
      run: |
        cd cloth-api && wrangler dev --port 8787 --local &
        cd frontend && npm run preview --port 3000 &
        sleep 10
      env:
        NODE_ENV: test
    
    - name: Run E2E tests
      run: cd tests/e2e && npm test
      env:
        BASE_URL: http://localhost:3000
    
    - name: Upload E2E artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: tests/e2e/playwright-report/

  # Deployment handled by Cloudflare's native CD:
  # - Workers: wrangler.toml triggers.cron or GitHub integration
  # - Pages: Automatic deployment on git push
  # 
  # To enable:
  # 1. Connect GitHub repo to Cloudflare Pages
  # 2. Set up Workers GitHub integration
  # 3. Configure environment variables in CF dashboard