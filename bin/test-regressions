#!/bin/sh -eu

echo "Testing regression bugs for dual Worker..."

# Navigate to git project root
PROJECT_ROOT="$(git rev-parse --show-toplevel)"
cd "$PROJECT_ROOT"

# Test 1: Root element error regression
printf "1. No 'Root element not found' in entry.client... "
if ! grep -r "getElementById.*root" cloth-frontend/app/entry.client.tsx; then
    echo "PASS"
else
    echo "FAIL - Found hardcoded root element reference"
    exit 1
fi

# Test 2: Document hydration (not root element)
printf "2. Uses document hydration... "
if grep -q "hydrateRoot" cloth-frontend/app/entry.client.tsx && \
   grep -q "document" cloth-frontend/app/entry.client.tsx; then
    echo "PASS"
else
    echo "FAIL - Not using document hydration"
    exit 1
fi

# Test 3: No manual asset hash management
printf "3. No hardcoded asset hashes in public/... "
HTML_FILES=$(find cloth-frontend/public -name "*.html" 2>/dev/null || true)
if [ -z "$HTML_FILES" ]; then
    echo "PASS"
else
    if ! echo "$HTML_FILES" | xargs grep -l "entry\.client-[A-Za-z0-9]*\.js" 2>/dev/null; then
        echo "PASS"
    else
        echo "FAIL - Found hardcoded asset hashes in public/"
        exit 1
    fi
fi

# Test 4: CSS imported correctly in Vite
printf "4. CSS imported via import, not link... "
if grep -q 'import.*tailwind\.css' cloth-frontend/app/root.tsx && \
   ! grep -q 'from.*tailwind\.css' cloth-frontend/app/root.tsx; then
    echo "PASS"
else
    echo "FAIL - CSS import method incorrect"
    exit 1
fi

# Test 5: SPA mode configured in vite.config
printf "5. SPA mode in vite.config... "
if grep -q "ssr: false" cloth-frontend/vite.config.ts; then
    echo "PASS"
else
    echo "FAIL - SPA mode not configured"
    exit 1
fi

# Test 6: No server-side loader functions
printf "6. No server-side loaders in index route... "
if ! grep -q "export.*loader" cloth-frontend/app/routes/_index.tsx; then
    echo "PASS"
else
    echo "FAIL - Found server-side loader (causes hydration mismatch)"
    exit 1
fi

# Test 7: Client-side data fetching
printf "7. Uses useEffect for data fetching... "
if grep -q "useEffect" cloth-frontend/app/routes/_index.tsx && \
   grep -q "fetch" cloth-frontend/app/routes/_index.tsx; then
    echo "PASS"
else
    echo "FAIL - Not using client-side data fetching"
    exit 1
fi

# Test 8: Remix Vite build command
printf "8. Uses remix vite:build command... "
if grep -q "remix vite:build" cloth-frontend/package.json; then
    echo "PASS"
else
    echo "FAIL - Not using Remix Vite build"
    exit 1
fi

# Test 9: Dual Worker deployment
printf "9. Uses dual Worker deployment... "
if grep -q "cloth-api" cloth-api/wrangler.toml && grep -q "cloth-frontend" cloth-frontend/wrangler.toml; then
    echo "PASS"
else
    echo "FAIL - Not using dual Worker deployment"
    exit 1
fi

# Test 10: Authentication configured
printf "10. Authentication configured... "
if grep -q "AUTH_USERNAME" cloth-api/wrangler.toml; then
    echo "PASS"
else
    echo "FAIL - Authentication not configured"
    exit 1
fi

# Test 11: Static assets binding configured
printf "11. Static assets binding... "
if grep -q "ASSETS" cloth-frontend/wrangler.toml; then
    echo "PASS"
else
    echo "FAIL - Static assets binding not configured"
    exit 1
fi

# Test 12: No manual index.html creation
printf "12. No manual index.html in public/... "
if [ ! -f "cloth-frontend/public/index.html" ]; then
    echo "PASS"
else
    echo "FAIL - Manual index.html found (should be auto-generated)"
    exit 1
fi

echo ""
echo "All regression tests passed!"